# -*- coding: utf-8 -*-
"""taller17,18,19.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1y4LSJFC3x0hyoGBQmhZr6mbaNqOksZO8
"""

import numpy as np
import matplotlib.pyplot as plt

X = np.array([1, 2, 3, 4, 5, 6, 7, 8])
y = np.array([4.3, 6.5, 7.5, 8, 8.5, 8.8, 9, 9.5])

coefficients = np.polyfit(X, y, 1)
b1 = coefficients[0]
b0 = coefficients[1]

plt.scatter(X, y, color='blue', label='Datos')
plt.plot(X, b0 + b1 * X, color='red', label='Regresión Lineal')
plt.xlabel('X')
plt.ylabel('y')
plt.title('Regresión Lineal Tradicional')
plt.legend()
plt.show()

import numpy as np
import matplotlib.pyplot as plt

x = np.array([1, 2, 3, 4, 5, 6, 7, 8])
y = np.array([4.3, 6.5, 7.5, 8, 8.5, 8.8, 9, 9.5])

A = np.vstack([x, np.ones(len(x))]).T
m, c = np.linalg.lstsq(A, y, rcond=None)[0]

a = c
b = m

plt.scatter(x, y, label='Datos')
plt.plot(x, a + b * x, color='green', label='Regresión de razón de crecimiento')
plt.xlabel('x')
plt.ylabel('y')
plt.legend()
plt.title('Regresión de Razón de Crecimiento')
plt.grid(True)
plt.show()

print(f"Razón de crecimiento: y = {a:.4f} + {b:.4f} * x")



import numpy as np
import matplotlib.pyplot as plt


x = np.array([1, 2, 3, 4, 5, 6, 7, 8])
y = np.array([4.3, 6.5, 7.5, 8, 8.5, 8.8, 9, 9.5])

log_x = np.log(x)
log_y = np.log(y)

A = np.vstack([log_x, np.ones(len(log_x))]).T
m, c = np.linalg.lstsq(A, log_y, rcond=None)[0]

a = np.exp(c)
b = m

plt.scatter(x, y, label='Datos')
plt.plot(x, a * x ** b, color='red', label='Regresión de potencias')
plt.xlabel('x')
plt.ylabel('y')
plt.legend()
plt.title('Regresión de Ecuación de Potencias')
plt.grid(True)
plt.show()

print(f"Ecuación de potencias: y = {a:.4f} * x^{b:.4f}")

import numpy as np
import matplotlib.pyplot as plt

x = np.array([1, 2, 3, 4, 5, 6, 7, 8])
y = np.array([4.3, 6.5, 7.5, 8, 8.5, 8.8, 9, 9.5])

A = np.vstack([x, np.ones(len(x))]).T
m, c = np.linalg.lstsq(A, y, rcond=None)[0]

a = c
b = m

plt.scatter(x, y, label='Datos')
plt.plot(x, a + b * x, color='green', label='Regresión de razón de crecimiento')
plt.xlabel('x')
plt.ylabel('y')
plt.legend()
plt.title('Regresión de Razón de Crecimiento')
plt.grid(True)
plt.show()

print(f"Razón de crecimiento: y = {a:.4f} + {b:.4f} * x")