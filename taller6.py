# -*- coding: utf-8 -*-
"""taller6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1G9l_OBfFGKM3lu4G3WCum1CYvb9FAXKt
"""

import math

def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n-1)

def cos_aproximado(x, epsilon_s):
    i = 0
    cos_x_aprox = 0
    epsilon_a = 1

    while epsilon_a >= epsilon_s:
        term = ((-1)**i) * (x**(2*i)) / factorial(2*i)
        cos_x_aprox += term

        i += 1
        next_term = ((-1)**i) * (x**(2*i)) / factorial(2*i)
        epsilon_a = abs(next_term)

    cos_x_exact = math.cos(x)
    error_relativo_porcentual = abs((cos_x_exact - cos_x_aprox) / cos_x_exact) * 100

    return cos_x_aprox, error_relativo_porcentual, i


x_radianes = float(input("Ingrese el valor en radianes: "))
epsilon_s = float(input("Ingrese el criterio de error esperado (ùúÄùë†): "))

valor_estimado, error_rel_porcentual, iteraciones = cos_aproximado(x_radianes, epsilon_s)
print(f"Valor estimado: {valor_estimado}")
print(f"Error relativo porcentual: {error_rel_porcentual:.8f}%")
print(f"N√∫mero de iteraciones realizadas: {iteraciones}")